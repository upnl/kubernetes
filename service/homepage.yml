apiVersion: v1
kind: Namespace
metadata:
  name: homepage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
  namespace: homepage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ebs
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: homepage
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:9.3-alpine
        volumeMounts:
        - name: db
          mountPath: /var/lib/postgresql
        envFrom:
        - secretRef:
            name: env
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: homepage
spec:
  selector:
    app: postgres
  type: ClusterIP
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: homepage
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:4-alpine
        envFrom:
        - secretRef:
            name: env
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: homepage
spec:
  selector:
    app: redis
  type: ClusterIP
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: upload
  namespace: homepage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ebs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: upnl-org
        image: upnl-org:2019-05-13
        volumeMounts:
        - name: upload
          mountPath: /app/homepage/upload
        envFrom:
        - secretRef:
            name: env
      volumes:
        - name: upload
          persistentVolumeClaim:
            claimName: upload
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery
  namespace: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery
  template:
    metadata:
      labels:
        app: celery
    spec:
      containers:
      - name: upnl-org
        image: upnl-org:2019-05-13
        envFrom:
        - secretRef:
            name: env
        command: ["celery"]
        args: ["worker", "-A", "run.celery"]
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: homepage
spec:
  selector:
    app: web
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 54321
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: homepage
  namespace: homepage
  annotations:
    ingress.kubernetes.io/ssl-redirect: 'true'
    # TODO: HSTS
spec:
  tls:
  - hosts: ['upnl.org']
    secretName: homepage-cert
  rules:
  - host: upnl.org
    http:
      paths:
      - backend:
          serviceName: homepage
          servicePort: 80
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: homepage-cert
  namespace: homepage
spec:
  secretName: homepage-cert
  dnsNames:
  - upnl.org
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
